[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (Oracle Corporation Java 21.0.1)
[debug]       Load.defaultLoad until apply took 3.6213ms
[debug]                 Load.loadUnit: plugins took 28.1793ms
[debug]                 Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\taita\IdeaProjects\LLMProject1\project
[debug]                   Load.loadUnit: mkEval took 0.2556ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\taita\IdeaProjects\LLMProject1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.629 ms
[info] loading settings for project llmproject1-build from idea.sbt ...
[debug]                     Load.resolveProject(llmproject1-build) took 1.8105ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id llmproject1-build, base: C:\Users\taita\IdeaProjects\LLMProject1\project, plugins: List(<none>))) took 3.8367ms
[debug] [Loading] Done in C:\Users\taita\IdeaProjects\LLMProject1\project, returning: (llmproject1-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 70.7037ms
[debug]                 Load.loadUnit: cleanEvalClasses took 2.9874ms
[debug]               Load.loadUnit(file:/C:/Users/taita/IdeaProjects/LLMProject1/project/, ...) took 102.8299ms
[debug]             Load.apply: load took 104.3251ms
[debug]             Load.apply: resolveProjects took 0.1578ms
[debug]             Load.apply: finalTransforms took 22.8375ms
[debug]             Load.apply: config.delegates took 0.434ms
[debug]             Load.apply: Def.make(settings)... took 83.1341ms
[debug]             Load.apply: structureIndex took 30.0573ms
[debug]             Load.apply: mkStreams took 0.0063ms
[info] loading project definition from C:\Users\taita\IdeaProjects\LLMProject1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 439.0494ms
[debug]           Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\taita\IdeaProjects\LLMProject1
[debug]             Load.loadUnit: mkEval took 0.2697ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.2481 ms
[info] loading settings for project root from build.sbt ...
[debug]               Load.resolveProject(root) took 45.6806ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\taita\IdeaProjects\LLMProject1, plugins: List(<none>))) took 51.2937ms
[debug] [Loading] Done in C:\Users\taita\IdeaProjects\LLMProject1, returning: (root)
[debug]           Load.loadUnit: loadedProjectsRaw took 4424.4495ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.1592ms
[debug]         Load.loadUnit(file:/C:/Users/taita/IdeaProjects/LLMProject1/, ...) took 4878.7494ms
[debug]       Load.apply: load took 4882.0588ms
[debug]       Load.apply: resolveProjects took 0.7259ms
[debug]       Load.apply: finalTransforms took 55.4652ms
[debug]       Load.apply: config.delegates took 0.5432ms
[debug]       Load.apply: Def.make(settings)... took 122.4842ms
[debug]       Load.apply: structureIndex took 21.9638ms
[debug]       Load.apply: mkStreams took 0.0074ms
[info] set current project to LLMProject1 (in build file:/C:/Users/taita/IdeaProjects/LLMProject1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56156 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56156, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to LLMProject1 (in build file:/C:/Users/taita/IdeaProjects/LLMProject1/)
[debug] > Exec(idea-shell, None, None)
