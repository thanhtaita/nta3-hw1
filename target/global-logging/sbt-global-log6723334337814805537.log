[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\taita\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\taita\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (Oracle Corporation Java 21.0.1)
[debug] Load.defaultLoad until apply took 164.5892ms
[debug]           Load.loadUnit: plugins took 108.087ms
[debug]           Load.loadUnit: defsScala took 2.9936ms
[debug] [Loading] Scanning directory C:\Users\taita\IdeaProjects\LLMProject1\project
[debug]             Load.loadUnit: mkEval took 3.4349ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\taita\IdeaProjects\LLMProject1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.0059 ms
[info] loading settings for project llmproject1-build from idea2.sbt ...
[debug]               Load.resolveProject(llmproject1-build) took 44.6064ms
[debug]             Load.loadTransitive: finalizeProject(Project(id llmproject1-build, base: C:\Users\taita\IdeaProjects\LLMProject1\project, plugins: List(<none>))) took 79.0432ms
[debug] [Loading] Done in C:\Users\taita\IdeaProjects\LLMProject1\project, returning: (llmproject1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 478.8292ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.8787ms
[debug]         Load.loadUnit(file:/C:/Users/taita/IdeaProjects/LLMProject1/project/, ...) took 660.8134ms
[debug]       Load.apply: load took 943.3922ms
[debug]       Load.apply: resolveProjects took 4.373ms
[debug]       Load.apply: finalTransforms took 152.6818ms
[debug]       Load.apply: config.delegates took 48.4614ms
[debug]       Load.apply: Def.make(settings)... took 1357.4156ms
[debug]       Load.apply: structureIndex took 150.7643ms
[debug]       Load.apply: mkStreams took 3.9494ms
[info] loading project definition from C:\Users\taita\IdeaProjects\LLMProject1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3992.3782ms
[debug]     Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Users\taita\IdeaProjects\LLMProject1
[debug]       Load.loadUnit: mkEval took 0.446ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.8899 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 56.5674ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\taita\IdeaProjects\LLMProject1, plugins: List(<none>))) took 65.5359ms
[debug] [Loading] Done in C:\Users\taita\IdeaProjects\LLMProject1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 237.6915ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.6053ms
[debug]   Load.loadUnit(file:/C:/Users/taita/IdeaProjects/LLMProject1/, ...) took 4237.1921ms
[debug] Load.apply: load took 4272.2126ms
[debug] Load.apply: resolveProjects took 0.1544ms
[debug] Load.apply: finalTransforms took 36.8743ms
[debug] Load.apply: config.delegates took 0.858ms
[debug] Load.apply: Def.make(settings)... took 141.7087ms
[debug] Load.apply: structureIndex took 36.423ms
[debug] Load.apply: mkStreams took 0.0062ms
[info] set current project to LLMProject1 (in build file:/C:/Users/taita/IdeaProjects/LLMProject1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56156 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56156, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to LLMProject1 (in build file:/C:/Users/taita/IdeaProjects/LLMProject1/)
[debug] > Exec(idea-shell, None, None)
